# Multiclass Image Classifier
modified Chainer example  
performs multiclass classification of images  
Ubuntu14.04, Python2.7, and Chainer1.14.0  
To use, execute instructions below.  


You have to prepare dataset that one directory has some directories named as class name.  
Each class directories has manually classified pictures.  
At the same directory of this file,  


‘$ python 01_make_train_data.py yourDatasetDirectoryName‘  
your pictures in dataset will be copied into new one directory "images", and name of the pictures are changed.also train.txt,   test.txt, and label.txt will be created.  


`$ python 02_crop.py images cropedImages`  
crop your pictures in "images" into 256*256px,and stored into a new directory "cropedImages".  


edit your test.txt and train.txt's path manually(ctrl + h).  
images -> cropedImages  


`$python 03_compute_mean.py train.txt`  
mean image will be created as "mean.npy"  


`$python 04_train_imagenet.py -g 0 -E 200 train.txt test.txt`  
this is a learning part.  
"-g 0" means use GPU(ID=0). -1 means CPU.  
"-E" means epoch times.  
"graph.dot", "graph.wo_split.dot" are created. these file discribes the structue of your neuralnets.  
"modelhdf5" is created. this is the parameter file containing all value in your neuralnets.  
"plot.json", "plotV.json" are created. these are log file. but under construction. please code the process or ignore them.  
"sigma.npy" is created. this stores standard deviation (sigma) in order to normalize dataset (mean=0, variance=1).  


`$python 05_resize.py yourPicture.jpg`  
this is optional. resize your image into 256*256, and save new image as  "_r"+yourPicture.jpg  
this require you openCV has been installed.  


`$python 06_inspection.py r_yourPicture.jpg`  
this is a classifier.  
input your image, and this returns the probability of the subject in the image.  


